/*
 * This is an auto-generated file - DO NOT EDIT! 
 * This is generated by ConfigGenerator tool 
 * This file was generated on: 2012/07/05 14:27:28 
 * The command line arguments were: "-server=test.idigi.com mlchan:***** "Linux Application" 0 config.rci"
 * The version of ConfigGenerator tool was: 1.0.0.0 */

#ifndef remote_config_h
#define remote_config_h

#define RCI_PARSER_USES_ERROR_DESCRIPTIONS
#define RCI_PARSER_USES_STRING
#define RCI_PARSER_USES_STRINGS


typedef enum {
    connector_element_type_string
} connector_element_value_type_t;

typedef struct {
    size_t min_length_in_bytes;
    size_t max_length_in_bytes;
} connector_element_value_string_t;


typedef struct {
    char const * string_value;
} connector_element_value_t;


 typedef struct {
    connector_element_value_string_t string_value;
} connector_element_value_limit_t;


#include "connector_remote.h"

extern char const connector_remote_all_strings[];

#define RCI_ENTITY_QUOTE (connector_remote_all_strings+0)
#define RCI_ENTITY_AMPERSAND (connector_remote_all_strings+5)
#define RCI_ENTITY_APOSTROPHE (connector_remote_all_strings+9)
#define RCI_ENTITY_LESS_THAN (connector_remote_all_strings+14)
#define RCI_ENTITY_GREATER_THAN (connector_remote_all_strings+17)
#define RCI_SET_SETTING (connector_remote_all_strings+20)
#define RCI_QUERY_SETTING (connector_remote_all_strings+32)
#define RCI_SET_STATE (connector_remote_all_strings+46)
#define RCI_QUERY_STATE (connector_remote_all_strings+56)
#define RCI_VERSION (connector_remote_all_strings+68)
#define RCI_VERSION_SUPPORTED (connector_remote_all_strings+76)
#define RCI_REPLY (connector_remote_all_strings+80)
#define RCI_REQUEST (connector_remote_all_strings+90)
#define RCI_INDEX (connector_remote_all_strings+102)
#define RCI_ID (connector_remote_all_strings+108)
#define RCI_HINT (connector_remote_all_strings+111)
#define RCI_ERROR (connector_remote_all_strings+116)
#define RCI_COMMENT (connector_remote_all_strings+122)
#define RCI_DESC (connector_remote_all_strings+126)

typedef enum {
 connector_rci_error_OFFSET = 1,
 connector_rci_error_parser_error =  connector_rci_error_OFFSET,
 connector_rci_error_bad_xml,
 connector_rci_error_bad_command,
 connector_rci_error_invalid_version,
 connector_rci_error_bad_group,
 connector_rci_error_bad_index,
 connector_rci_error_bad_element,
 connector_rci_error_bad_value,
 connector_rci_error_COUNT
} connector_rci_error_id_t;


typedef enum {
 connector_global_error_OFFSET = connector_rci_error_COUNT,
 connector_global_error_load_fail =  connector_global_error_OFFSET,
 connector_global_error_save_fail,
 connector_global_error_memory_fail,
 connector_global_error_COUNT
} connector_global_error_id_t;

typedef enum {
 connector_setting_system_description,
 connector_setting_system_contact,
 connector_setting_system_location,
 connector_setting_system_COUNT
} connector_setting_system_id_t;

typedef enum {
 connector_setting_system_error_invalid_length = connector_global_error_COUNT,
 connector_setting_system_error_COUNT
} connector_setting_system_error_id_t;

typedef enum {
 connector_setting_system,
 connector_setting_COUNT
} connector_setting_id_t;

typedef enum {
 connector_state_gps_stats_latitude,
 connector_state_gps_stats_longitude,
 connector_state_gps_stats_COUNT
} connector_state_gps_stats_id_t;

typedef enum {
 connector_state_gps_stats,
 connector_state_COUNT
} connector_state_id_t;



#if defined CONNECTOR_RCI_PARSER_INTERNAL_DATA

#define FIRMWARE_TARGET_ZERO_VERSION  0x0

#define SETTING_SYSTEM (connector_remote_all_strings+131)
#define SETTING_SYSTEM_DESCRIPTION (connector_remote_all_strings+138)
#define SETTING_SYSTEM_CONTACT (connector_remote_all_strings+150)
#define SETTING_SYSTEM_LOCATION (connector_remote_all_strings+158)
#define SETTING_SYSTEM_ERROR_INVALID_LENGTH (connector_remote_all_strings+167)
#define STATE_GPS_STATS (connector_remote_all_strings+182)
#define STATE_GPS_STATS_LATITUDE (connector_remote_all_strings+192)
#define STATE_GPS_STATS_LONGITUDE (connector_remote_all_strings+201)
#define CONNECTOR_GLOBAL_ERROR_LOAD_FAIL (connector_remote_all_strings+211)
#define CONNECTOR_GLOBAL_ERROR_SAVE_FAIL (connector_remote_all_strings+221)
#define CONNECTOR_GLOBAL_ERROR_MEMORY_FAIL (connector_remote_all_strings+231)
#define CONNECTOR_RCI_ERROR_PARSER_ERROR (connector_remote_all_strings+251)
#define CONNECTOR_RCI_ERROR_BAD_XML (connector_remote_all_strings+264)
#define CONNECTOR_RCI_ERROR_BAD_COMMAND (connector_remote_all_strings+272)
#define CONNECTOR_RCI_ERROR_INVALID_VERSION (connector_remote_all_strings+284)
#define CONNECTOR_RCI_ERROR_BAD_GROUP (connector_remote_all_strings+300)
#define CONNECTOR_RCI_ERROR_BAD_INDEX (connector_remote_all_strings+310)
#define CONNECTOR_RCI_ERROR_BAD_ELEMENT (connector_remote_all_strings+320)
#define CONNECTOR_RCI_ERROR_BAD_VALUE (connector_remote_all_strings+332)

char const connector_remote_all_strings[] = {
 4,'q','u','o','t',
 3,'a','m','p',
 4,'a','p','o','s',
 2,'l','t',
 2,'g','t',
 11,'s','e','t','_','s','e','t','t','i','n','g',
 13,'q','u','e','r','y','_','s','e','t','t','i','n','g',
 9,'s','e','t','_','s','t','a','t','e',
 11,'q','u','e','r','y','_','s','t','a','t','e',
 7,'v','e','r','s','i','o','n',
 3,'1','.','1',
 9,'r','c','i','_','r','e','p','l','y',
 11,'r','c','i','_','r','e','q','u','e','s','t',
 5,'i','n','d','e','x',
 2,'i','d',
 4,'h','i','n','t',
 5,'e','r','r','o','r',
 3,'!','-','-',
 4,'d','e','s','c',
 6,'s','y','s','t','e','m',
 11,'d','e','s','c','r','i','p','t','i','o','n',
 7,'c','o','n','t','a','c','t',
 8,'l','o','c','a','t','i','o','n',
 14,'I','n','v','a','l','i','d',' ','L','e','n','g','t','h',
 9,'g','p','s','_','s','t','a','t','s',
 8,'l','a','t','i','t','u','d','e',
 9,'l','o','n','g','i','t','u','d','e',
 9,'L','o','a','d',' ','f','a','i','l',
 9,'S','a','v','e',' ','f','a','i','l',
 19,'I','n','s','u','f','f','i','c','i','e','n','t',' ','m','e','m','o','r','y',
 12,'P','a','r','s','e','r',' ','e','r','r','o','r',
 7,'B','a','d',' ','X','M','L',
 11,'B','a','d',' ','c','o','m','m','a','n','d',
 15,'I','n','v','a','l','i','d',' ','v','e','r','s','i','o','n',
 9,'B','a','d',' ','g','r','o','u','p',
 9,'B','a','d',' ','i','n','d','e','x',
 11,'B','a','d',' ','e','l','e','m','e','n','t',
 9,'B','a','d',' ','v','a','l','u','e'
};

static connector_element_value_string_t const setting_system_description_limit = {
 0,
 63
};

static connector_element_value_string_t const setting_system_contact_limit = {
 0,
 63
};

static connector_element_value_string_t const setting_system_location_limit = {
 0,
 63
};

static connector_group_element_t const setting_system_elements[] = {
 { SETTING_SYSTEM_DESCRIPTION,  /*description*/
   connector_element_access_read_write,
   connector_element_type_string,
  (connector_element_value_limit_t *)&setting_system_description_limit
 },
 { SETTING_SYSTEM_CONTACT,  /*contact*/
   connector_element_access_read_write,
   connector_element_type_string,
  (connector_element_value_limit_t *)&setting_system_contact_limit
 },
 { SETTING_SYSTEM_LOCATION,  /*location*/
   connector_element_access_read_write,
   connector_element_type_string,
  (connector_element_value_limit_t *)&setting_system_location_limit
 }
};

static char const * const setting_system_errors[] = {
 SETTING_SYSTEM_ERROR_INVALID_LENGTH /*invalid_length*/
};

static connector_group_t const connector_setting_groups[] = {
 { SETTING_SYSTEM,  /*system*/
   1,
   { asizeof(setting_system_elements),
     setting_system_elements
   },
   { asizeof(setting_system_errors),
     setting_system_errors
   }
 }

};

static connector_group_element_t const state_gps_stats_elements[] = {
 { STATE_GPS_STATS_LATITUDE,  /*latitude*/
   connector_element_access_read_only,
   connector_element_type_string,
  NULL
 },
 { STATE_GPS_STATS_LONGITUDE,  /*longitude*/
   connector_element_access_read_only,
   connector_element_type_string,
  NULL
 }
};

static connector_group_t const connector_state_groups[] = {
 { STATE_GPS_STATS,  /*gps_stats*/
   1,
   { asizeof(state_gps_stats_elements),
     state_gps_stats_elements
   },
   { 0,
     NULL
   }
 }
};

static char const * const connector_rci_errors[] = {
 CONNECTOR_RCI_ERROR_PARSER_ERROR, /*parser_error*/
 CONNECTOR_RCI_ERROR_BAD_XML, /*bad_xml*/
 CONNECTOR_RCI_ERROR_BAD_COMMAND, /*bad_command*/
 CONNECTOR_RCI_ERROR_INVALID_VERSION, /*invalid_version*/
 CONNECTOR_RCI_ERROR_BAD_GROUP, /*bad_group*/
 CONNECTOR_RCI_ERROR_BAD_INDEX, /*bad_index*/
 CONNECTOR_RCI_ERROR_BAD_ELEMENT, /*bad_element*/
 CONNECTOR_RCI_ERROR_BAD_VALUE, /*bad_value*/
 CONNECTOR_GLOBAL_ERROR_LOAD_FAIL, /*load_fail*/
 CONNECTOR_GLOBAL_ERROR_SAVE_FAIL, /*save_fail*/
 CONNECTOR_GLOBAL_ERROR_MEMORY_FAIL /*memory_fail*/
};

static connector_group_table_t const connector_group_table[] = {
 {connector_setting_groups,
 asizeof(connector_setting_groups)
 },
 {connector_state_groups,
 asizeof(connector_state_groups)
 }
};


#endif /* CONNECTOR_RCI_PARSER_INTERNAL_DATA */


#endif /* remote_config_h */
